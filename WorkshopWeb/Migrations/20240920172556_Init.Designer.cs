// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop.Server.Data;

#nullable disable

namespace Workshop.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240920172556_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Workshop.Server.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Workshop.Server.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Customer_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Product_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State_Type_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StateId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Workshop.Server.Entity.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Ingredient")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Product")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Workshop.Server.Entity.State_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("State_Type_Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("State_Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            State_Type_Title = "ToDo"
                        },
                        new
                        {
                            Id = 2,
                            State_Type_Title = "InProgress"
                        },
                        new
                        {
                            Id = 3,
                            State_Type_Title = "Ready"
                        },
                        new
                        {
                            Id = 4,
                            State_Type_Title = "Canceled"
                        });
                });

            modelBuilder.Entity("Workshop.Server.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkshopWeb.Entity.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientType_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Ingredient_TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimalAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Ingredient_TypeId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("WorkshopWeb.Entity.Ingredient_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IngredientTypeTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredient_Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientTypeTitle = "Not_defined"
                        },
                        new
                        {
                            Id = 2,
                            IngredientTypeTitle = "Leather"
                        },
                        new
                        {
                            Id = 3,
                            IngredientTypeTitle = "Metal"
                        },
                        new
                        {
                            Id = 4,
                            IngredientTypeTitle = "Clay"
                        },
                        new
                        {
                            Id = 5,
                            IngredientTypeTitle = "Color"
                        });
                });

            modelBuilder.Entity("WorkshopWeb.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Production_time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Workshop.Server.Entity.Order", b =>
                {
                    b.HasOne("Workshop.Server.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("WorkshopWeb.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Workshop.Server.Entity.State_Type", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Workshop.Server.Entity.Recipe", b =>
                {
                    b.HasOne("WorkshopWeb.Entity.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("WorkshopWeb.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WorkshopWeb.Entity.Ingredient", b =>
                {
                    b.HasOne("WorkshopWeb.Entity.Ingredient_Type", "Ingredient_Type")
                        .WithMany()
                        .HasForeignKey("Ingredient_TypeId");

                    b.Navigation("Ingredient_Type");
                });
#pragma warning restore 612, 618
        }
    }
}
